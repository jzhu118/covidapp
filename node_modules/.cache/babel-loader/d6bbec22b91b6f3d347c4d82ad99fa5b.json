{"ast":null,"code":"import { path } from \"d3-path\";\nimport constant from \"./constant\";\nimport { epsilon, pi, halfPi, tau } from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n      y10 = y1 - y0,\n      x32 = x3 - x2,\n      y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n} // Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function () {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n    if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n    if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n\n        if (r0 > epsilon) {\n          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      } // Or is it a circular or annular sector?\n      else {\n          var a01 = a0,\n              a11 = a1,\n              a00 = a0,\n              a10 = a1,\n              da0 = da,\n              da1 = da,\n              ap = padAngle.apply(this, arguments) / 2,\n              rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n              rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n              rc0 = rc,\n              rc1 = rc,\n              t0,\n              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n          if (rp > epsilon) {\n            var p0 = asin(rp / r0 * Math.sin(ap)),\n                p1 = asin(rp / r1 * Math.sin(ap));\n            if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n            if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n          }\n\n          var x01 = r1 * Math.cos(a01),\n              y01 = r1 * Math.sin(a01),\n              x10 = r0 * Math.cos(a10),\n              y10 = r0 * Math.sin(a10); // Apply rounded corners?\n\n          if (rc > epsilon) {\n            var x11 = r1 * Math.cos(a11),\n                y11 = r1 * Math.sin(a11),\n                x00 = r0 * Math.cos(a00),\n                y00 = r0 * Math.sin(a00); // Restrict the corner radius according to the sector angle.\n\n            if (da < pi) {\n              var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n                  ax = x01 - oc[0],\n                  ay = y01 - oc[1],\n                  bx = x11 - oc[0],\n                  by = y11 - oc[1],\n                  kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n                  lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n              rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n              rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n            }\n          } // Is the sector collapsed to a line?\n\n\n          if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n          else if (rc1 > epsilon) {\n              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n                  context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the outer ring just a circular arc?\n            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n          // Or perhaps it’s an annular sector collapsed due to padding?\n\n          if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n          else if (rc0 > epsilon) {\n              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n                  context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the inner ring just a circular arc?\n            else context.arc(0, 0, r0, a10, a00, cw);\n        }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}","map":{"version":3,"sources":["/Users/rubychan/Documents/GitHub/covidapp/node_modules/d3-svg-annotation/node_modules/d3-shape/src/arc.js"],"names":["path","constant","epsilon","pi","halfPi","tau","arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","x","Math","intersect","x0","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","cw","x01","y01","lo","sqrt","ox","oy","x11","y11","x00","y00","dx","dy","d2","r","D","max","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","context","arc","buffer","r0","apply","arguments","a0","a1","da","abs","moveTo","cos","sin","a01","a11","a00","a10","da0","da1","ap","rp","min","rc0","rc1","t0","t1","p0","p1","oc","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","centroid","a","_","length"],"mappings":"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","sourcesContent":["import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {epsilon, pi, halfPi, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n"]},"metadata":{},"sourceType":"module"}