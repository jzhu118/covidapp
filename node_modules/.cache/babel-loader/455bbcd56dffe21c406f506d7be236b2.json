{"ast":null,"code":"import _classCallCheck from\"/Users/rubychan/Documents/GitHub/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rubychan/Documents/GitHub/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/rubychan/Documents/GitHub/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/rubychan/Documents/GitHub/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import ReactDOM from'react-dom';import chart from'./chartD3.js';import _ from'lodash';var ChartD3=/*#__PURE__*/function(_Component){_inherits(ChartD3,_Component);var _super=_createSuper(ChartD3);function ChartD3(){_classCallCheck(this,ChartD3);return _super.apply(this,arguments);}_createClass(ChartD3,[{key:\"componentDidMount\",value:function componentDidMount(){var el=ReactDOM.findDOMNode(this);chart.create(el,{width:1200,height:600},this.getChartState());}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){chart.update(this.getChartState());}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){return!_.isEqual(nextProps.data,this.props.data);}},{key:\"getChartState\",value:function getChartState(){return{data:this.props.data,title:this.props.title};}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var el=ReactDOM.findDOMNode(this);chart.cleanUp(el);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"chart\"});}}]);return ChartD3;}(Component);export default ChartD3;","map":{"version":3,"sources":["/Users/rubychan/Documents/GitHub/covidapp/src/ChartD3.jsx"],"names":["React","Component","ReactDOM","chart","_","ChartD3","el","findDOMNode","create","width","height","getChartState","update","nextProps","nextState","isEqual","data","props","title","cleanUp"],"mappings":"gnBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,cAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,C,GAEMC,CAAAA,O,yQAEgB,CAClB,GAAIC,CAAAA,EAAE,CAAGJ,QAAQ,CAACK,WAAT,CAAqB,IAArB,CAAT,CAEFJ,KAAK,CAACK,MAAN,CAAaF,EAAb,CAAiB,CAChBG,KAAK,CAAE,IADS,CAEhBC,MAAM,CAAE,GAFQ,CAAjB,CAGG,KAAKC,aAAL,EAHH,EAIC,C,+DAEoB,CACnBR,KAAK,CAACS,MAAN,CAAa,KAAKD,aAAL,EAAb,EACD,C,oEAEqBE,S,CAAWC,S,CAAW,CAC1C,MAAO,CAACV,CAAC,CAACW,OAAF,CAAUF,SAAS,CAACG,IAApB,CAA0B,KAAKC,KAAL,CAAWD,IAArC,CAAR,CACD,C,qDAEe,CACd,MAAO,CACLA,IAAI,CAAE,KAAKC,KAAL,CAAWD,IADZ,CAELE,KAAK,CAAE,KAAKD,KAAL,CAAWC,KAFb,CAAP,CAID,C,mEAEsB,CACrB,GAAIZ,CAAAA,EAAE,CAAGJ,QAAQ,CAACK,WAAT,CAAqB,IAArB,CAAT,CACAJ,KAAK,CAACgB,OAAN,CAAcb,EAAd,EACD,C,uCAEQ,CACP,mBACE,2BAAK,SAAS,CAAC,OAAf,EADF,CAGD,C,qBAnCmBL,S,EA2CtB,cAAeI,CAAAA,OAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport chart from './chartD3.js';\nimport _ from 'lodash';\n\nclass ChartD3 extends Component {\n\n  componentDidMount() {\n    let el = ReactDOM.findDOMNode(this);\n\t\n\t\tchart.create(el, {\n\t\t\twidth: 1200,\n\t\t\theight: 600\n\t\t}, this.getChartState());\n  }\n\n  componentDidUpdate() {\n    chart.update(this.getChartState());\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(nextProps.data, this.props.data);\n  }\n\n  getChartState() {\n    return {\n      data: this.props.data,\n      title: this.props.title\n    };\n  }\n\n  componentWillUnmount() {\n    let el = ReactDOM.findDOMNode(this);\n    chart.cleanUp(el);\n  }\n\n  render() {\n    return (\n      <div className='chart'></div>\n    );\n  }\n}\n\nChartD3.propTypes = {\n  data: PropTypes.array,\n  title: PropTypes.string\n};\n\nexport default ChartD3;"]},"metadata":{},"sourceType":"module"}