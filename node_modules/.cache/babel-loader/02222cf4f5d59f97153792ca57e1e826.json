{"ast":null,"code":"var _jsxFileName = \"/Users/rubychan/covidapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { allPhasesData } from './data/allPhasesData';\nimport ChartD3 from './ChartD3.jsx';\nimport ChartHighstock from './ChartHighstock';\nimport MapWithStops from './MapWithStops';\nimport _ from 'lodash';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 1,\n      data: _.cloneDeep(hubData),\n      title: 'HubSpot Stock in D3',\n      type: 'd3'\n    };\n    this.hubSpotInD3Selected = this.hubSpotInD3Selected.bind(this);\n    this.googleInD3Selected = this.googleInD3Selected.bind(this);\n    this.hubSpotInHighchartSelected = this.hubSpotInHighchartSelected.bind(this);\n    this.googleInHighchartSelected = this.googleInHighchartSelected.bind(this);\n    this.gmapsSelected = this.gmapsSelected.bind(this);\n  }\n\n  hubSpotInD3Selected() {\n    this.setState({\n      selected: 1,\n      data: _.cloneDeep(hubData),\n      title: 'HubSpot Stock in D3',\n      type: 'd3'\n    });\n  }\n\n  googleInD3Selected() {\n    this.setState({\n      selected: 2,\n      data: _.cloneDeep(googData),\n      title: 'Google Stock in D3',\n      type: 'd3'\n    });\n  }\n\n  hubSpotInHighchartSelected() {\n    this.setState({\n      selected: 3,\n      data: _.cloneDeep(hubData),\n      title: 'HubSpot Stock in Highchart',\n      type: 'highchart'\n    });\n  }\n\n  googleInHighchartSelected() {\n    this.setState({\n      selected: 4,\n      data: _.cloneDeep(googData),\n      title: 'Google Stock in Highchart',\n      type: 'highchart'\n    });\n  }\n\n  gmapsSelected() {\n    this.setState({\n      selected: 5,\n      title: 'Places on Google Maps',\n      type: 'gmaps'\n    });\n  }\n\n  render() {\n    let content;\n    if (this.state.type === 'd3') content = /*#__PURE__*/React.createElement(ChartD3, {\n      data: this.state.data,\n      title: this.state.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    });else if (this.state.type === 'highchart') content = /*#__PURE__*/React.createElement(ChartHighstock, {\n      data: this.state.data,\n      title: this.state.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    });else if (this.state.type === 'gmaps') {\n      content = /*#__PURE__*/React.createElement(MapWithStops, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      });\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Charts and google maps with React.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-d3 \" + (this.state.selected === 1 ? 'active' : ''),\n      onClick: this.hubSpotInD3Selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"HubSpot + D3\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-d3 \" + (this.state.selected === 2 ? 'active' : ''),\n      onClick: this.googleInD3Selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Google + D3\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-highchart \" + (this.state.selected === 3 ? 'active' : ''),\n      onClick: this.hubSpotInHighchartSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"HubSpot + Highchart\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-highchart \" + (this.state.selected === 4 ? 'active' : ''),\n      onClick: this.googleInHighchartSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Google + Highchart\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-gmaps \" + (this.state.selected === 5 ? 'active' : ''),\n      onClick: this.gmapsSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Places on GMaps\")), content));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rubychan/covidapp/src/App.js"],"names":["React","Component","allPhasesData","ChartD3","ChartHighstock","MapWithStops","_","App","constructor","props","state","selected","data","cloneDeep","hubData","title","type","hubSpotInD3Selected","bind","googleInD3Selected","hubSpotInHighchartSelected","googleInHighchartSelected","gmapsSelected","setState","googData","render","content","logo"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { allPhasesData as allPhasesData } from './data/allPhasesData';\nimport ChartD3 from './ChartD3.jsx';\nimport ChartHighstock from './ChartHighstock';\nimport MapWithStops from './MapWithStops';\nimport _ from 'lodash';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 1, \n      data: _.cloneDeep(hubData), \n      title: 'HubSpot Stock in D3',\n      type: 'd3'\n    };\n    this.hubSpotInD3Selected = this.hubSpotInD3Selected.bind(this);\n    this.googleInD3Selected = this.googleInD3Selected.bind(this);\n    this.hubSpotInHighchartSelected = this.hubSpotInHighchartSelected.bind(this);\n    this.googleInHighchartSelected = this.googleInHighchartSelected.bind(this);\n    this.gmapsSelected = this.gmapsSelected.bind(this);\n  }\n\n  hubSpotInD3Selected() {\n    this.setState({\n      selected: 1,\n      data: _.cloneDeep(hubData),\n      title: 'HubSpot Stock in D3',\n      type: 'd3'\n    });\n  }\n\n  googleInD3Selected() {\n    this.setState({\n      selected: 2,\n      data: _.cloneDeep(googData),\n      title: 'Google Stock in D3',\n      type: 'd3'\n    });\n  }\n\n  hubSpotInHighchartSelected() {\n    this.setState({\n      selected: 3,\n      data: _.cloneDeep(hubData),\n      title: 'HubSpot Stock in Highchart',\n      type: 'highchart'\n    });\n  }\n\n  googleInHighchartSelected() {\n    this.setState({\n      selected: 4,\n      data: _.cloneDeep(googData),\n      title: 'Google Stock in Highchart',\n      type: 'highchart'\n    });\n  }\n\n  gmapsSelected() {\n    this.setState({\n      selected: 5,\n      title: 'Places on Google Maps',\n      type: 'gmaps'\n    });\n  }\n\n  render() {\n    let content;\n    if (this.state.type === 'd3')\n      content = <ChartD3 data={this.state.data} title={this.state.title} />;\n    else if (this.state.type === 'highchart')\n      content = <ChartHighstock data={this.state.data} title={this.state.title} />;\n    else if (this.state.type === 'gmaps') {\n      content = <MapWithStops />;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Charts and google maps with React.</h2>\n        </div>\n        <div className=\"container\">\n          <div className=\"nav\">\n            <button type='button' className={\"btn btn-d3 \" + (this.state.selected === 1 ? 'active' : '')} onClick={this.hubSpotInD3Selected}>HubSpot + D3</button>\n            <button type='button' className={\"btn btn-d3 \" + (this.state.selected === 2 ? 'active' : '')} onClick={this.googleInD3Selected}>Google + D3</button>\n            <button type='button' className={\"btn btn-highchart \" + (this.state.selected === 3 ? 'active' : '')} onClick={this.hubSpotInHighchartSelected}>HubSpot + Highchart</button>\n            <button type='button' className={\"btn btn-highchart \" + (this.state.selected === 4 ? 'active' : '')} onClick={this.googleInHighchartSelected}>Google + Highchart</button>\n            <button type='button' className={\"btn btn-gmaps \" + (this.state.selected === 5 ? 'active' : '')} onClick={this.gmapsSelected}>Places on GMaps</button>\n          </div>\n\n          {content}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}